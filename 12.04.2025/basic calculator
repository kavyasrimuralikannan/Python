class Solution(object):
    def calculate(self, s):
        """
        :type s: str
        :rtype: int
        """
        stack = []
        current_number = 0
        sign = 1  # 1 means positive, -1 means negative
        result = 0

        for char in s:
            if char.isdigit():  # Build the current number
                current_number = current_number * 10 + int(char)
            elif char == '+':
                result += sign * current_number
                sign = 1  # Positive sign for next number
                current_number = 0
            elif char == '-':
                result += sign * current_number
                sign = -1  # Negative sign for next number
                current_number = 0
            elif char == '(':
                # Push the result and sign onto the stack
                stack.append(result)
                stack.append(sign)
                result = 0
                sign = 1
            elif char == ')':
                result += sign * current_number
                current_number = 0
                result *= stack.pop()  # Apply the sign before '('
                result += stack.pop()  # Add the result before '('

        result += sign * current_number  # Add the last number
        return result

        
