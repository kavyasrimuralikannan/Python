class Solution(object):
    def operate(self, left, right, op):
        if op == "+":
            return int(left) + int(right)
        if op == "-":
            return int(left) - int(right)
        if op == "*":
            return int(left) * int(right)
        
    def diffWaysToCompute(self, expression):
        """
        :type expression: str
        :rtype: List[int]
        """
        mem = {}
        
        def dp(exp): 
            if exp in mem:
                return mem[exp]
            
            if exp.isdigit(): 
                mem[exp] = [int(exp)]
            else: 
                results = []
                for i, elem in enumerate(exp):
                    if elem in "*+-":
                        left = dp(exp[:i])
                        right = dp(exp[i+1:])
                        for leftResult in left:
                            for rightResult in right:
                                results.append(self.operate(leftResult, rightResult, elem))
                mem[exp] = results

            return mem[exp]
        
        return dp(expression)
